// Generated by view binder compiler. Do not edit!
package com.example.hospitalmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hospitalmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PatientInfoDialogBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnSubmitInfo;

  @NonNull
  public final EditText etPatientEmail;

  @NonNull
  public final EditText etPatientName;

  @NonNull
  public final EditText etPatientPhone;

  @NonNull
  public final EditText etPatientTime;

  private PatientInfoDialogBinding(@NonNull LinearLayout rootView, @NonNull Button btnSubmitInfo,
      @NonNull EditText etPatientEmail, @NonNull EditText etPatientName,
      @NonNull EditText etPatientPhone, @NonNull EditText etPatientTime) {
    this.rootView = rootView;
    this.btnSubmitInfo = btnSubmitInfo;
    this.etPatientEmail = etPatientEmail;
    this.etPatientName = etPatientName;
    this.etPatientPhone = etPatientPhone;
    this.etPatientTime = etPatientTime;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PatientInfoDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PatientInfoDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.patient_info_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PatientInfoDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_submit_info;
      Button btnSubmitInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnSubmitInfo == null) {
        break missingId;
      }

      id = R.id.et_patient_email;
      EditText etPatientEmail = ViewBindings.findChildViewById(rootView, id);
      if (etPatientEmail == null) {
        break missingId;
      }

      id = R.id.et_patient_name;
      EditText etPatientName = ViewBindings.findChildViewById(rootView, id);
      if (etPatientName == null) {
        break missingId;
      }

      id = R.id.et_patient_phone;
      EditText etPatientPhone = ViewBindings.findChildViewById(rootView, id);
      if (etPatientPhone == null) {
        break missingId;
      }

      id = R.id.et_patient_time;
      EditText etPatientTime = ViewBindings.findChildViewById(rootView, id);
      if (etPatientTime == null) {
        break missingId;
      }

      return new PatientInfoDialogBinding((LinearLayout) rootView, btnSubmitInfo, etPatientEmail,
          etPatientName, etPatientPhone, etPatientTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

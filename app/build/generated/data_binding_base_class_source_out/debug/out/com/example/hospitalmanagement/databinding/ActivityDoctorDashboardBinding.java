// Generated by view binder compiler. Do not edit!
package com.example.hospitalmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hospitalmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDoctorDashboardBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button appointmentButton;

  @NonNull
  public final CardView appointmentCard;

  @NonNull
  public final RecyclerView appointmentRecyclerView;

  @NonNull
  public final Button busyStatusButton;

  @NonNull
  public final Button completedAppointmentButton;

  @NonNull
  public final CardView completedAppointmentCard;

  @NonNull
  public final Button logoutBtn;

  @NonNull
  public final Button prescribeButton;

  @NonNull
  public final CardView prescribeCard;

  @NonNull
  public final Button sendStatusButton;

  private ActivityDoctorDashboardBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button appointmentButton, @NonNull CardView appointmentCard,
      @NonNull RecyclerView appointmentRecyclerView, @NonNull Button busyStatusButton,
      @NonNull Button completedAppointmentButton, @NonNull CardView completedAppointmentCard,
      @NonNull Button logoutBtn, @NonNull Button prescribeButton, @NonNull CardView prescribeCard,
      @NonNull Button sendStatusButton) {
    this.rootView = rootView;
    this.appointmentButton = appointmentButton;
    this.appointmentCard = appointmentCard;
    this.appointmentRecyclerView = appointmentRecyclerView;
    this.busyStatusButton = busyStatusButton;
    this.completedAppointmentButton = completedAppointmentButton;
    this.completedAppointmentCard = completedAppointmentCard;
    this.logoutBtn = logoutBtn;
    this.prescribeButton = prescribeButton;
    this.prescribeCard = prescribeCard;
    this.sendStatusButton = sendStatusButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDoctorDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDoctorDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_doctor_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDoctorDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appointmentButton;
      Button appointmentButton = ViewBindings.findChildViewById(rootView, id);
      if (appointmentButton == null) {
        break missingId;
      }

      id = R.id.appointmentCard;
      CardView appointmentCard = ViewBindings.findChildViewById(rootView, id);
      if (appointmentCard == null) {
        break missingId;
      }

      id = R.id.appointmentRecyclerView;
      RecyclerView appointmentRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (appointmentRecyclerView == null) {
        break missingId;
      }

      id = R.id.busyStatusButton;
      Button busyStatusButton = ViewBindings.findChildViewById(rootView, id);
      if (busyStatusButton == null) {
        break missingId;
      }

      id = R.id.completedAppointmentButton;
      Button completedAppointmentButton = ViewBindings.findChildViewById(rootView, id);
      if (completedAppointmentButton == null) {
        break missingId;
      }

      id = R.id.completedAppointmentCard;
      CardView completedAppointmentCard = ViewBindings.findChildViewById(rootView, id);
      if (completedAppointmentCard == null) {
        break missingId;
      }

      id = R.id.logoutBtn;
      Button logoutBtn = ViewBindings.findChildViewById(rootView, id);
      if (logoutBtn == null) {
        break missingId;
      }

      id = R.id.prescribeButton;
      Button prescribeButton = ViewBindings.findChildViewById(rootView, id);
      if (prescribeButton == null) {
        break missingId;
      }

      id = R.id.prescribeCard;
      CardView prescribeCard = ViewBindings.findChildViewById(rootView, id);
      if (prescribeCard == null) {
        break missingId;
      }

      id = R.id.sendStatusButton;
      Button sendStatusButton = ViewBindings.findChildViewById(rootView, id);
      if (sendStatusButton == null) {
        break missingId;
      }

      return new ActivityDoctorDashboardBinding((ConstraintLayout) rootView, appointmentButton,
          appointmentCard, appointmentRecyclerView, busyStatusButton, completedAppointmentButton,
          completedAppointmentCard, logoutBtn, prescribeButton, prescribeCard, sendStatusButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.hospitalmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hospitalmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBookAppointmentsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bookButton;

  @NonNull
  public final EditText datePicker;

  @NonNull
  public final Spinner doctorSpinner;

  @NonNull
  public final EditText timePicker;

  @NonNull
  public final Toolbar toolbar;

  private ActivityBookAppointmentsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button bookButton, @NonNull EditText datePicker, @NonNull Spinner doctorSpinner,
      @NonNull EditText timePicker, @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.bookButton = bookButton;
    this.datePicker = datePicker;
    this.doctorSpinner = doctorSpinner;
    this.timePicker = timePicker;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBookAppointmentsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBookAppointmentsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_book_appointments, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBookAppointmentsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookButton;
      Button bookButton = ViewBindings.findChildViewById(rootView, id);
      if (bookButton == null) {
        break missingId;
      }

      id = R.id.datePicker;
      EditText datePicker = ViewBindings.findChildViewById(rootView, id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.doctorSpinner;
      Spinner doctorSpinner = ViewBindings.findChildViewById(rootView, id);
      if (doctorSpinner == null) {
        break missingId;
      }

      id = R.id.timePicker;
      EditText timePicker = ViewBindings.findChildViewById(rootView, id);
      if (timePicker == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityBookAppointmentsBinding((ConstraintLayout) rootView, bookButton,
          datePicker, doctorSpinner, timePicker, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

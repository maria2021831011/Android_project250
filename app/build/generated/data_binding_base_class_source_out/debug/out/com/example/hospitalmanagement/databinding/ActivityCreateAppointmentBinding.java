// Generated by view binder compiler. Do not edit!
package com.example.hospitalmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hospitalmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCreateAppointmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button createAppointmentBtn;

  @NonNull
  public final EditText date;

  @NonNull
  public final EditText doctorName;

  @NonNull
  public final EditText patientName;

  @NonNull
  public final EditText time;

  private ActivityCreateAppointmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button createAppointmentBtn, @NonNull EditText date, @NonNull EditText doctorName,
      @NonNull EditText patientName, @NonNull EditText time) {
    this.rootView = rootView;
    this.createAppointmentBtn = createAppointmentBtn;
    this.date = date;
    this.doctorName = doctorName;
    this.patientName = patientName;
    this.time = time;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCreateAppointmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCreateAppointmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_create_appointment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCreateAppointmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.createAppointmentBtn;
      Button createAppointmentBtn = ViewBindings.findChildViewById(rootView, id);
      if (createAppointmentBtn == null) {
        break missingId;
      }

      id = R.id.date;
      EditText date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.doctorName;
      EditText doctorName = ViewBindings.findChildViewById(rootView, id);
      if (doctorName == null) {
        break missingId;
      }

      id = R.id.patientName;
      EditText patientName = ViewBindings.findChildViewById(rootView, id);
      if (patientName == null) {
        break missingId;
      }

      id = R.id.time;
      EditText time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new ActivityCreateAppointmentBinding((ConstraintLayout) rootView, createAppointmentBtn,
          date, doctorName, patientName, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.example.hospitalmanagement.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.hospitalmanagement.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemReportCardBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView approvedText;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final TextView doctorText;

  @NonNull
  public final TextView patientText;

  @NonNull
  public final TextView rejectedText;

  private ItemReportCardBinding(@NonNull CardView rootView, @NonNull TextView approvedText,
      @NonNull TextView dateText, @NonNull TextView doctorText, @NonNull TextView patientText,
      @NonNull TextView rejectedText) {
    this.rootView = rootView;
    this.approvedText = approvedText;
    this.dateText = dateText;
    this.doctorText = doctorText;
    this.patientText = patientText;
    this.rejectedText = rejectedText;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemReportCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemReportCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_report_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemReportCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.approvedText;
      TextView approvedText = ViewBindings.findChildViewById(rootView, id);
      if (approvedText == null) {
        break missingId;
      }

      id = R.id.dateText;
      TextView dateText = ViewBindings.findChildViewById(rootView, id);
      if (dateText == null) {
        break missingId;
      }

      id = R.id.doctorText;
      TextView doctorText = ViewBindings.findChildViewById(rootView, id);
      if (doctorText == null) {
        break missingId;
      }

      id = R.id.patientText;
      TextView patientText = ViewBindings.findChildViewById(rootView, id);
      if (patientText == null) {
        break missingId;
      }

      id = R.id.rejectedText;
      TextView rejectedText = ViewBindings.findChildViewById(rootView, id);
      if (rejectedText == null) {
        break missingId;
      }

      return new ItemReportCardBinding((CardView) rootView, approvedText, dateText, doctorText,
          patientText, rejectedText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
